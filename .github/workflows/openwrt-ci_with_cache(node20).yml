# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI_with_cache(node20)

on:
  push:
    branches: 
       - master
  schedule:
       - cron: 0 20 * * 5
  # release:
  #   types: [published]
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-22.04

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          images=$(docker images -q)
          if [ -n "$images" ]; then
            docker rmi $images
          else
            echo "No images to remove"
          fi
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt -y install aria2 fastjar nano python3-pip
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: cache
        uses: klever1988/cachewrtbuild@main
        with:
          ccache: 'true'

      - name: Download custom package
        run: |
          git clone https://github.com/esirplayground/luci-app-poweroff.git ./package/lean/uci-app-poweroff
      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          sed -i '1i src-git xiaorouji https://github.com/xiaorouji/openwrt-passwall-packages' feeds.conf.default
          sed -i '2i src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
          sed -i '3i src-git small https://github.com/kenzok8/small' feeds.conf.default
          ./scripts/feeds update -a && rm -rf feeds/luci/applications/luci-app-mosdns
          rm -rf feeds/packages/net/{alist,adguardhome,mosdns,xray*,v2ray*,v2ray*,sing*,smartdns}
          rm -rf feeds/packages/utils/v2dat
          rm -rf feeds/packages/lang/golang
          git clone https://github.com/kenzok8/golang feeds/packages/lang/golang
          ./scripts/feeds install -a

      # - name: Generate configuration file
      #   run: make defconfig

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iptables-mod-socket=y
          CONFIG_PACKAGE_iptables-mod-extra=y
          CONFIG_PACKAGE_iptables-mod-tproxy=y
          # CONFIG_PACKAGE_luci-theme-argone=y
          # CONFIG_PACKAGE_luci-app-argone-config=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-app-argon-config=y
          CONFIG_PACKAGE_luci-i18n-argon-config-zh-cn=y
          CONFIG_PACKAGE_luci-app-passwall2=y
          CONFIG_PACKAGE_luci-i18n-passwall2-zh-cn=y
          # CONFIG_PACKAGE_luci-app-passwall=y
          # CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
          CONFIG_PACKAGE_luci-app-poweroff=y
          CONFIG_PACKAGE_luci-i18n-poweroff-zh-cn=y
          # CONFIG_DEVEL=y
          # CONFIG_CCACHE=y
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
